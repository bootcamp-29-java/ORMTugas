package views;

import controllers.DepartmentController;
import icontrollers.IDepartmentController;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.Department;
import org.hibernate.SessionFactory;
import tools.HibernateUtil;

public class InternalDepartment extends javax.swing.JInternalFrame {

    /**
     * Creates new form InternalDepartment
     */
    public InternalDepartment() {
        initComponents();
        empty();
        dt_Department();
        listManagerID();
        listLocationID();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        txtTitle = new javax.swing.JLabel();
        pnDataDepartment = new javax.swing.JPanel();
        tfSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        spDepartment = new javax.swing.JScrollPane();
        tblDepartment = new javax.swing.JTable();
        btnPrint = new javax.swing.JButton();
        pnInputDepartment = new javax.swing.JPanel();
        txtID = new javax.swing.JLabel();
        tfID = new javax.swing.JTextField();
        txtName = new javax.swing.JLabel();
        tfName = new javax.swing.JTextField();
        txtManagerID = new javax.swing.JLabel();
        txtLocationID = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        cbManagerID = new javax.swing.JComboBox<>();
        cbLocationID = new javax.swing.JComboBox<>();

        setTitle("Department");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        txtTitle.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtTitle.setText("Department");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(txtTitle, gridBagConstraints);

        pnDataDepartment.setBorder(javax.swing.BorderFactory.createTitledBorder("Data Department"));
        pnDataDepartment.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 350;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        pnDataDepartment.add(tfSearch, gridBagConstraints);

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        pnDataDepartment.add(btnSearch, gridBagConstraints);

        tblDepartment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Number", "Department ID", "Department Name", "Manager Name", "City"
            }
        ));
        tblDepartment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDepartmentMouseClicked(evt);
            }
        });
        spDepartment.setViewportView(tblDepartment);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        pnDataDepartment.add(spDepartment, gridBagConstraints);

        btnPrint.setText("Print");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        pnDataDepartment.add(btnPrint, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipady = 250;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(pnDataDepartment, gridBagConstraints);

        pnInputDepartment.setBorder(javax.swing.BorderFactory.createTitledBorder("Input Data"));
        pnInputDepartment.setLayout(new java.awt.GridBagLayout());

        txtID.setText("ID");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        pnInputDepartment.add(txtID, gridBagConstraints);

        tfID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfIDKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 150;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        pnInputDepartment.add(tfID, gridBagConstraints);

        txtName.setText("Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        pnInputDepartment.add(txtName, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 150;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        pnInputDepartment.add(tfName, gridBagConstraints);

        txtManagerID.setText("Manager ID");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 50, 10, 10);
        pnInputDepartment.add(txtManagerID, gridBagConstraints);

        txtLocationID.setText("Location ID");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 50, 10, 10);
        pnInputDepartment.add(txtLocationID, gridBagConstraints);

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        pnInputDepartment.add(btnSave, gridBagConstraints);

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        pnInputDepartment.add(btnUpdate, gridBagConstraints);

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        pnInputDepartment.add(btnDelete, gridBagConstraints);

        cbManagerID.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        pnInputDepartment.add(cbManagerID, gridBagConstraints);

        cbLocationID.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        pnInputDepartment.add(cbLocationID, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(pnInputDepartment, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    SessionFactory factory = HibernateUtil.getSessionFactory();
    IDepartmentController idcon = new DepartmentController(factory);
    Department department = new Department();
    List<Department> listDepartment;
    private DefaultTableModel tabmode;

    protected void dt_Department() {
        Object[] Line = {"Number", "ID", "Name", "Manager ID", "Location ID"};
        tabmode = new DefaultTableModel(null, Line);
        String findData = tfSearch.getText();
        int n = 1;
        for (Department department : idcon.search(findData)) {
            tabmode.addRow(new Object[]{
                n,
                department.getId(),
                department.getName(),
                (department.getManager() == null) ? "" : department.getManager().getFirstName() + " " + department.getManager().getLastName(),
                (department.getLocation() == null) ? "" : department.getLocation().getCity()
            });
            n++;
        }
        tblDepartment.setModel(tabmode);
    }

    protected void empty() {
        tfID.setText(null);
        tfName.setText(null);
        cbManagerID.setSelectedItem("-");
        cbLocationID.setSelectedItem("-");
    }

    protected void listManagerID() {
        idcon.searchID(1);
        listDepartment = idcon.searchID(1);
        for (Object data : listDepartment.toArray()) {
            cbManagerID.addItem(data.toString());
        }
    }

    protected void listLocationID() {
        idcon.searchID(1);
        listDepartment = idcon.searchID(2);
        for (Object data : listDepartment.toArray()) {
            cbLocationID.addItem(data.toString());
        }
    }
    
    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        dt_Department();
    }//GEN-LAST:event_btnSearchActionPerformed

    private void tblDepartmentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDepartmentMouseClicked
        int dt = tblDepartment.getSelectedRow();
        String a = (tabmode.getValueAt(dt, 1) != null) ? (tabmode.getValueAt(dt, 1).toString()) : "";
        String b = (tabmode.getValueAt(dt, 2) != null) ? (tabmode.getValueAt(dt, 2).toString()) : "";
        String c = (tabmode.getValueAt(dt, 3) != null) ? (tabmode.getValueAt(dt, 3).toString()) : "";
        String d = (tabmode.getValueAt(dt, 4) != null) ? (tabmode.getValueAt(dt, 4).toString()) : "";
        tfID.setText(a);
        tfName.setText(b);
        //        cbManagerID.setText(c);
        //        tfLocationID.setText(d);
    }//GEN-LAST:event_tblDepartmentMouseClicked

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        //        try {
            //            String fileName = "src/views/report/Department.jasper";
            //            HashMap HM = new HashMap();
            //            File reportFile = new File(fileName);
            //            HM.put("key", tfSearch.getText());
            //            JasperReport JR = (JasperReport) JRLoader.loadObject(reportFile);
            //            JasperPrint JP = JasperFillManager.fillReport(JR, HM,  /* Dimasukkan Apa disini */);
            //            JasperViewer.viewReport(JP, false);
            //            JasperViewer.setDefaultLookAndFeelDecorated(true);
            //        } catch (Exception e) {
            //            JOptionPane.showMessageDialog(null, e.getMessage());
            //        }
    }//GEN-LAST:event_btnPrintActionPerformed

    private void tfIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfIDKeyTyped
        char enter = evt.getKeyChar();
        if (!(Character.isDigit(enter))) {
            evt.consume();
        }
    }//GEN-LAST:event_tfIDKeyTyped

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if (tfID.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Department ID hasn't been filled");
        } else {
            if (tfName.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Department Name hasn't been filled");
            } else {
                if (cbManagerID.getSelectedItem().equals("-")) {
                    JOptionPane.showMessageDialog(null, "Manager ID hasn't been filled");
                } else {
                    if (cbLocationID.getSelectedItem().equals("-")) {
                        JOptionPane.showMessageDialog(null, "Location ID hasn't been filled");
                    } else {
                        idcon.save(tfID.getText(), tfName.getText(), cbManagerID.getSelectedItem().toString(), cbLocationID.getSelectedItem().toString());
                        dt_Department();
                        empty();
                    }
                }
            }
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        if (tfID.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Department ID hasn't been filled");
        } else {
            if (tfName.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Department Name hasn't been filled");
            } else {
                if (cbManagerID.getSelectedItem().equals("-")) {
                    JOptionPane.showMessageDialog(null, "Manager ID hasn't been filled");
                } else {
                    if (cbLocationID.getSelectedItem().equals("-")) {
                        JOptionPane.showMessageDialog(null, "Location ID hasn't been filled");
                    } else {
                        idcon.save(tfID.getText(), tfName.getText(), cbManagerID.getSelectedItem().toString(), cbLocationID.getSelectedItem().toString());
                        dt_Department();
                        empty();
                    }
                }
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if (tfID.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Department ID hasn't been filled");
        } else {
            idcon.delete(tfID.getText());
            dt_Department();
            empty();
        }
    }//GEN-LAST:event_btnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cbLocationID;
    private javax.swing.JComboBox<String> cbManagerID;
    private javax.swing.JPanel pnDataDepartment;
    private javax.swing.JPanel pnInputDepartment;
    private javax.swing.JScrollPane spDepartment;
    private javax.swing.JTable tblDepartment;
    private javax.swing.JTextField tfID;
    private javax.swing.JTextField tfName;
    private javax.swing.JTextField tfSearch;
    private javax.swing.JLabel txtID;
    private javax.swing.JLabel txtLocationID;
    private javax.swing.JLabel txtManagerID;
    private javax.swing.JLabel txtName;
    private javax.swing.JLabel txtTitle;
    // End of variables declaration//GEN-END:variables
}
