/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import controllers.DepartmentController;
import controllers.EmployeeController;
import controllers.JobController;
import java.math.BigDecimal;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.Department;
import models.Employee;
import models.Job;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import tools.HibernateUtil;

/**
 *
 * @author ASUS
 */
public class InternalEmployeeView extends javax.swing.JInternalFrame {

    private EmployeeController controller;
    private List<Employee> listEmployee;
    private DefaultTableModel dtm;
    int no, row;
    private String[] tabelHeader;
    SessionFactory factory = HibernateUtil.getSessionFactory();
    Session session;
    Transaction transaction;
    List<Job> listJob;
    JobController cJob = new JobController(factory);
    List<Department> listDepartment;
    DepartmentController cDepartment = new DepartmentController(factory);

    /**
     * Creates new form InternalEmployeeView
     */
    public InternalEmployeeView() {
        initComponents();
        controller = new EmployeeController(factory);
        tabelHeader = new String[]{
            "No", "ID", "First Name", "Last Name", "Emali", "Phone", "Hire Date", "Job ID", "Salary", "Commision", "Manager", "Department"
        };
        dtm = new DefaultTableModel(null, tabelHeader);
        tabelData.setModel(dtm);

        HireDate.setDate(new Date());
        refreshTabel();
        tampilCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtCari = new javax.swing.JTextField();
        tombolCari = new javax.swing.JButton();
        tombolReset = new javax.swing.JButton();
        kriteriaCari = new javax.swing.JComboBox<String>();
        fullTabel = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        tombolSimpanTambah = new javax.swing.JButton();
        resetTambah = new javax.swing.JButton();
        txtFirstName = new javax.swing.JTextField();
        txtId = new javax.swing.JTextField();
        txtLastName = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        txtSalary = new javax.swing.JTextField();
        txtCommision = new javax.swing.JTextField();
        comboJobId = new javax.swing.JComboBox<String>();
        comboManagerId = new javax.swing.JComboBox<String>();
        comboDepartmentId = new javax.swing.JComboBox<String>();
        tombolHapus = new javax.swing.JButton();
        HireDate = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelData = new javax.swing.JTable();

        setResizable(true);

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Cari Berdasarkan :");

        txtCari.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        tombolCari.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tombolCari.setText("Cari");
        tombolCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolCariActionPerformed(evt);
            }
        });

        tombolReset.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tombolReset.setText("Reset");
        tombolReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolResetActionPerformed(evt);
            }
        });

        kriteriaCari.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Default", "ID" }));

        fullTabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        fullTabel.setText("Lihat Full Tabel");
        fullTabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fullTabelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(kriteriaCari, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(tombolCari)
                        .addGap(18, 18, 18)
                        .addComponent(tombolReset))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(97, 97, 97)
                        .addComponent(fullTabel)))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(136, 136, 136)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(kriteriaCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(txtCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tombolCari)
                    .addComponent(tombolReset))
                .addGap(133, 133, 133)
                .addComponent(fullTabel)
                .addContainerGap(182, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Utama", jPanel1);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("ID");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("First Name");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Last Name");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Email");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Phone");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Hire Date");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("Job ID");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setText("Salary");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("Commision");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel12.setText("Manager ID");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel13.setText("Deparment ID");

        tombolSimpanTambah.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tombolSimpanTambah.setText("Simpan");
        tombolSimpanTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolSimpanTambahActionPerformed(evt);
            }
        });

        resetTambah.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        resetTambah.setText("Reset");
        resetTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetTambahActionPerformed(evt);
            }
        });

        txtFirstName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtFirstName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFirstNameFocusLost(evt);
            }
        });

        txtId.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtLastName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtEmail.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEmailFocusLost(evt);
            }
        });

        txtPhone.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtSalary.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        txtCommision.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        comboJobId.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "- Pilih Job -" }));
        comboJobId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboJobIdActionPerformed(evt);
            }
        });

        comboManagerId.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "- Pilih Manager -", "0" }));

        comboDepartmentId.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "- Pilih Department -", "0" }));

        tombolHapus.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tombolHapus.setText("Hapus Data");
        tombolHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolHapusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(comboJobId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel10)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtSalary, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4)
                                .addComponent(jLabel5)
                                .addComponent(jLabel6)
                                .addComponent(jLabel7)
                                .addComponent(jLabel8))
                            .addGap(20, 20, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtId, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                                .addComponent(txtFirstName)
                                .addComponent(txtLastName)
                                .addComponent(txtEmail)
                                .addComponent(txtPhone)
                                .addComponent(HireDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel13)
                            .addGap(0, 0, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(txtCommision, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel12)
                    .addComponent(comboManagerId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboDepartmentId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(86, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(tombolSimpanTambah)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(resetTambah)
                .addGap(35, 35, 35)
                .addComponent(tombolHapus)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(HireDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboJobId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10)
                    .addComponent(txtSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtCommision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(30, 30, 30)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboManagerId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboDepartmentId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tombolSimpanTambah)
                    .addComponent(tombolHapus)
                    .addComponent(resetTambah))
                .addGap(26, 26, 26))
        );

        jTabbedPane1.addTab("Kelola Data", jPanel2);

        tabelData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelDataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelData);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 852, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
            .addComponent(jScrollPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tombolCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombolCariActionPerformed
        String cari = (String) kriteriaCari.getSelectedItem();
        if (cari.equals("Default")) {
            cari(txtCari.getText());
        } else {
            getID(txtCari.getText());
        }
    }//GEN-LAST:event_tombolCariActionPerformed

    private void tombolResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombolResetActionPerformed
        refreshTabel();
        txtCari.setText("");
    }//GEN-LAST:event_tombolResetActionPerformed

    private void tombolSimpanTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombolSimpanTambahActionPerformed
        String id = txtId.getText();
        String first = txtFirstName.getText();
        String last = txtLastName.getText();
        String mail = txtEmail.getText();
        String phone = txtPhone.getText();

        SimpleDateFormat formatDB = new SimpleDateFormat("MM/dd/yyyy");
        String date = formatDB.format(HireDate.getDate());

        String job = (String) comboJobId.getSelectedItem();
//        String job = ambilIdRelasi((String) comboJobId.getSelectedItem());
        System.out.println(job);
        
        String salary = txtSalary.getText();
        String commision;
        if (txtCommision.getText().isEmpty()) {
            commision = "0";
        } else {
            commision = txtCommision.getText();
        }

//        String employeeId = (String) comboManagerId.getSelectedItem();
        String employeeId = ambilIdRelasi((String) comboManagerId.getSelectedItem());
        System.out.println(employeeId);
        
//        String departmentId = (String) comboDepartmentId.getSelectedItem();
        String departmentId = ambilIdRelasi((String) comboDepartmentId.getSelectedItem());
        System.out.println(departmentId);
        
        try {
            JOptionPane.showMessageDialog(this, controller.save(id, first, last, mail, phone, date, job, salary, commision, employeeId, departmentId));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Tidak Boleh Ada Field yang Kosong !");
        }

        reset_tambah();
        refreshTabel();
        txtId.setEnabled(true);
    }//GEN-LAST:event_tombolSimpanTambahActionPerformed

    private void resetTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetTambahActionPerformed
        reset_tambah();
        txtId.setEnabled(true);
        txtId.requestFocus();
    }//GEN-LAST:event_resetTambahActionPerformed

    private void txtFirstNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFirstNameFocusLost
        // TODO add your handling code here:
        if (txtFirstName.getText().matches("^[a-zA-Z]+$")) {

        } else {
            JOptionPane.showMessageDialog(null, "Username hanya berisi huruf");
            this.txtFirstName.requestFocus();
        }
    }//GEN-LAST:event_txtFirstNameFocusLost

    private void txtEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEmailFocusLost
        if (txtEmail.getText().matches("^[a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+$")) {

        } else {
            JOptionPane.showMessageDialog(null, "Format Email Salah");
            txtEmail.requestFocus();
        }
    }//GEN-LAST:event_txtEmailFocusLost

    private void comboJobIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboJobIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboJobIdActionPerformed

    private void tombolHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombolHapusActionPerformed
        int jawab = JOptionPane.showOptionDialog(this, "Yakin ingin menghapus data?", "Hapus Data", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);

        if (jawab == JOptionPane.YES_OPTION) {

            String id = txtId.getText();
            JOptionPane.showMessageDialog(this, controller.delete(id));
            reset_tambah();
            refreshTabel();
        }
        txtId.setEnabled(true);
    }//GEN-LAST:event_tombolHapusActionPerformed

    private void tabelDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelDataMouseClicked
        try {
            setField();
            txtId.setEnabled(false);
        } catch (ParseException ex) {
            Logger.getLogger(InternalEmployeeView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tabelDataMouseClicked

    private void fullTabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fullTabelActionPerformed
        EmployeeTabelFul full = new EmployeeTabelFul();
        full.setVisible(true);
//        this.setVisible(false);
    }//GEN-LAST:event_fullTabelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser HireDate;
    private javax.swing.JComboBox<String> comboDepartmentId;
    private javax.swing.JComboBox<String> comboJobId;
    private javax.swing.JComboBox<String> comboManagerId;
    private javax.swing.JButton fullTabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JComboBox<String> kriteriaCari;
    private javax.swing.JButton resetTambah;
    private javax.swing.JTable tabelData;
    private javax.swing.JButton tombolCari;
    private javax.swing.JButton tombolHapus;
    private javax.swing.JButton tombolReset;
    private javax.swing.JButton tombolSimpanTambah;
    private javax.swing.JTextField txtCari;
    private javax.swing.JTextField txtCommision;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtSalary;
    // End of variables declaration//GEN-END:variables

    private void refreshTabel() {
        Employee e = new Employee(0);
        Department d = new Department(new Short("0"));

        listEmployee = controller.getAll();
        dtm = (DefaultTableModel) tabelData.getModel();
        dtm.setRowCount(0);
        no = 1;
        for (Employee employee : listEmployee) {
//            System.out.println(employee.getDepartment().getId());
            if (employee.getManager() == null) {
                employee.setManager(e);
            } else if (employee.getDepartment() == null) {
                employee.setDepartment(d);
            }
            dtm.addRow(new Object[]{
                no++,
                employee.getId(),
                employee.getFirstName(),
                employee.getLastName(),
                employee.getEmail(),
                employee.getPhoneNumber(),
                employee.getHireDate(),
                employee.getJob().getId(),
                employee.getSalary(),
                employee.getCommissionPct(),
                "< " + employee.getManager().getId() + " > " + employee.getManager().getFirstName(),
                "< " + employee.getDepartment().getId() + " > " + employee.getDepartment().getName()
            });
        }
        if (tabelData.getRowCount() > 0) {
            row = tabelData.getRowCount() - 1;
            tabelData.setRowSelectionInterval(row, row);
        }
    }

    private void cari(String key) {
        Employee e = new Employee(0);
        Department d = new Department(new Short("0"));

        controller.search(key);
        listEmployee = controller.search(key);

        dtm = (DefaultTableModel) tabelData.getModel();
        dtm.setRowCount(0);
        no = 1;
        for (Employee employee : listEmployee) {
            if (employee.getManager() == null) {
                employee.setManager(e);
            } else if (employee.getDepartment() == null) {
                employee.setDepartment(d);
            }
            dtm.addRow(new Object[]{
                no++,
                employee.getId(),
                employee.getFirstName(),
                employee.getLastName(),
                employee.getEmail(),
                employee.getPhoneNumber(),
                employee.getHireDate(),
                employee.getJob().getId(),
                employee.getSalary(),
                employee.getCommissionPct(),
                employee.getManager().getId(),
                employee.getDepartment().getId()
            });
        }
        if (tabelData.getRowCount() > 0) {
            row = tabelData.getRowCount() - 1;
            tabelData.setRowSelectionInterval(row, row);
        }
    }

    private void getID(String id) {
        Employee e = new Employee(0);
        Department d = new Department(new Short("0"));
        controller.getById(id);
        Employee employee = controller.getById(id);

        dtm = (DefaultTableModel) tabelData.getModel();
        dtm.setRowCount(0);
        no = 1;

        if (employee.getManager() == null) {
            employee.setManager(e);
        } else if (employee.getDepartment() == null) {
            employee.setDepartment(d);
        }
        dtm.addRow(new Object[]{
            no++,
            employee.getId(),
            employee.getFirstName(),
            employee.getLastName(),
            employee.getEmail(),
            employee.getPhoneNumber(),
            employee.getHireDate(),
            employee.getJob().getId(),
            employee.getSalary(),
            employee.getCommissionPct(),
            employee.getManager().getId(),
            employee.getDepartment().getId()
        });
        if (tabelData.getRowCount() > 0) {
            row = tabelData.getRowCount() - 1;
            tabelData.setRowSelectionInterval(row, row);
        }
    }

    private void tampilCombo() {
        listJob = cJob.search("");
        for (Job data : listJob) {
//            comboJobId.addItem("< " + data.getId().toString() + " > " + data.getTittle());
            comboJobId.addItem(data.getId().toString());
        }

        for (Employee data : listEmployee) {
            comboManagerId.addItem("< " + data.getId().toString() + " > " + data.getFirstName());
//            comboManagerId.addItem(data.getFirstName().toString());
        }

        listDepartment = cDepartment.search("");
        for (Department data : listDepartment) {
            comboDepartmentId.addItem("< " + data.getId().toString() + " > " + data.getName());
//            comboDepartmentId.addItem(data.getName().toString());
        }
    }

    private void reset_tambah() {
        txtId.setText("");
        txtFirstName.setText("");
        txtLastName.setText("");
        txtEmail.setText("");
        txtPhone.setText("");
        HireDate.setDate(new Date());
        comboJobId.setSelectedIndex(0);
        txtSalary.setText("");
        txtCommision.setText("");
        comboManagerId.setSelectedIndex(0);
        comboDepartmentId.setSelectedIndex(0);
    }

    private void setField() throws ParseException {
        row = tabelData.getSelectedRow();
        txtId.setText(tabelData.getValueAt(row, 1).toString());
        txtFirstName.setText((String) tabelData.getValueAt(row, 2));
        txtLastName.setText((String) tabelData.getValueAt(row, 3));
        txtEmail.setText((String) tabelData.getValueAt(row, 4));
        txtPhone.setText((String) tabelData.getValueAt(row, 5));

        HireDate.setDateFormatString("dd/MMM/yyyy");
        HireDate.setDate((Date) tabelData.getValueAt(row, 6));

        comboJobId.setSelectedItem(tabelData.getValueAt(row, 7));

        txtSalary.setText(tabelData.getValueAt(row, 8).toString());

        String commision = (tabelData.getValueAt(row, 9) != null) ? (tabelData.getValueAt(row, 9).toString()) : "";
        txtCommision.setText(commision);

        String managerId = (tabelData.getValueAt(row, 10) != "0") ? (tabelData.getValueAt(row, 10).toString()) : "0";
        comboManagerId.setSelectedItem(managerId);

        String departmentId = (tabelData.getValueAt(row, 11) != "0") ? (tabelData.getValueAt(row, 11).toString()) : "0";
        comboDepartmentId.setSelectedItem(departmentId);
    }
    
    private String ambilIdRelasi(String kalimat){
        String id = kalimat;
        Pattern p = Pattern.compile("< (.+?) >", Pattern.DOTALL);
        Matcher m = p.matcher(id);
        m.find();
        String hasil = m.group(1);
        return hasil;
    }
}
