package views;

import controllers.DepartmentController;
import controllers.EmployeeController;
import controllers.LocationController;
import daos.DepartmentDAO;
import icontrollers.IDepartmentController;
import icontrollers.IEmployeeController;
import icontrollers.ILocationController;
import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.Department;
import models.Employee;
import models.Location;
import org.hibernate.SessionFactory;
import tools.HibernateUtil;

public class DepartmentView extends javax.swing.JFrame {

    /**
     * Creates new form DepartmentView
     */
    public DepartmentView() {
        initComponents();
        empty();
        dt_Department();
        listManagerID();
        listLocationID();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        txtTitle = new javax.swing.JLabel();
        pnDataDepartment = new javax.swing.JPanel();
        tfSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        spDepartment = new javax.swing.JScrollPane();
        tblDepartment = new javax.swing.JTable();
        btnPrint = new javax.swing.JButton();
        pnInputDepartment = new javax.swing.JPanel();
        txtID = new javax.swing.JLabel();
        tfID = new javax.swing.JTextField();
        txtName = new javax.swing.JLabel();
        tfName = new javax.swing.JTextField();
        txtManagerID = new javax.swing.JLabel();
        txtLocationID = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        cbManagerID = new javax.swing.JComboBox<>();
        cbLocationID = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Department");
        setMaximumSize(new java.awt.Dimension(8000, 8000));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setName("fmDepartment"); // NOI18N
        getContentPane().setLayout(new java.awt.GridBagLayout());

        txtTitle.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtTitle.setText("Department");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(txtTitle, gridBagConstraints);

        pnDataDepartment.setBorder(javax.swing.BorderFactory.createTitledBorder("Data Department"));
        pnDataDepartment.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 350;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        pnDataDepartment.add(tfSearch, gridBagConstraints);

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        pnDataDepartment.add(btnSearch, gridBagConstraints);

        tblDepartment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Number", "Department ID", "Department Name", "Manager Name", "City"
            }
        ));
        tblDepartment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDepartmentMouseClicked(evt);
            }
        });
        spDepartment.setViewportView(tblDepartment);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        pnDataDepartment.add(spDepartment, gridBagConstraints);

        btnPrint.setText("Print");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        pnDataDepartment.add(btnPrint, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipady = 250;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(pnDataDepartment, gridBagConstraints);

        pnInputDepartment.setBorder(javax.swing.BorderFactory.createTitledBorder("Input Data"));
        pnInputDepartment.setLayout(new java.awt.GridBagLayout());

        txtID.setText("ID");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        pnInputDepartment.add(txtID, gridBagConstraints);

        tfID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfIDKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 150;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        pnInputDepartment.add(tfID, gridBagConstraints);

        txtName.setText("Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        pnInputDepartment.add(txtName, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 150;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        pnInputDepartment.add(tfName, gridBagConstraints);

        txtManagerID.setText("Manager ID");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 50, 10, 10);
        pnInputDepartment.add(txtManagerID, gridBagConstraints);

        txtLocationID.setText("Location ID");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 50, 10, 10);
        pnInputDepartment.add(txtLocationID, gridBagConstraints);

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        pnInputDepartment.add(btnSave, gridBagConstraints);

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        pnInputDepartment.add(btnDelete, gridBagConstraints);

        cbManagerID.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-" }));
        cbManagerID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbManagerIDActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        pnInputDepartment.add(cbManagerID, gridBagConstraints);

        cbLocationID.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-" }));
        cbLocationID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbLocationIDActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 100;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        pnInputDepartment.add(cbLocationID, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(pnInputDepartment, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    SessionFactory factory = HibernateUtil.getSessionFactory();
    IDepartmentController idcon = new DepartmentController(factory);
    IEmployeeController iecon = new EmployeeController(factory);
    ILocationController ilcon = new LocationController(factory);
    Department department = new Department();
    List<Department> listDepartment;
    List<Employee> listEmployee;
    List<Location> listLocation;
    private DefaultTableModel tabmode;

    protected void dt_Department() {
        Object[] Line = {"Number", "ID", "Name", "Manager ID", "Manager Name", "Location ID", "City"};
        tabmode = new DefaultTableModel(null, Line);
        String findData = tfSearch.getText();
        int n = 1;
        for (Department department : idcon.search(findData)) {
            tabmode.addRow(new Object[]{
                n,
                department.getId(),
                department.getName(),
                (department.getManager() == null) ? "" : department.getManager().getId(),
                (department.getManager() == null) ? "" : department.getManager().getFirstName() + " " + department.getManager().getLastName(),
                (department.getLocation() == null) ? "" : department.getLocation().getId(),
                (department.getLocation() == null) ? "" : department.getLocation().getCity()
            });
            n++;
        }
        tblDepartment.setModel(tabmode);
    }

    protected void empty() {
        tfID.setText(null);
        tfName.setText(null);
        cbManagerID.setSelectedItem("-");
        cbLocationID.setSelectedItem("-");
    }

    String managerID = null;
    protected void listManagerID() {
        listEmployee = iecon.search("");
        for (Employee data : listEmployee) {
            cbManagerID.addItem(data.getId().toString()+" - "+data.getFirstName()+" "+data.getLastName());
        }
    }

    String locationID = null;
    protected void listLocationID() {
        listLocation = ilcon.search("");
        for (Location data : listLocation) {
            cbLocationID.addItem(data.getId().toString()+" - "+data.getCity());
        }
    }
    
    private String getIDRelation(String text){
        Pattern p = Pattern.compile("\\d+");
        Matcher m = p.matcher(text);
        m.find();
        String hasil = m.group(0);
        return hasil;
    }

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if (tfID.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Department ID hasn't been filled");
        } else {
            if (tfName.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Department Name hasn't been filled");
            } else {
                if (cbManagerID.getSelectedItem().equals("-")) {
                    JOptionPane.showMessageDialog(null, "Manager ID hasn't been filled");
                } else {
                    if (cbLocationID.getSelectedItem().equals("-")) {
                        JOptionPane.showMessageDialog(null, "Location ID hasn't been filled");
                    } else {
                        idcon.save(tfID.getText(), tfName.getText(), getIDRelation(cbManagerID.getSelectedItem().toString()), getIDRelation(cbLocationID.getSelectedItem().toString()));
                        dt_Department();
                        empty();
                    }
                }
            }
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if (tfID.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Department ID hasn't been filled");
        } else {
            idcon.delete(tfID.getText());
            dt_Department();
            empty();
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        dt_Department();
    }//GEN-LAST:event_btnSearchActionPerformed

    private void tblDepartmentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDepartmentMouseClicked
        int dt = tblDepartment.getSelectedRow();
        String a = (tabmode.getValueAt(dt, 1) != null) ? (tabmode.getValueAt(dt, 1).toString()) : "";
        String b = (tabmode.getValueAt(dt, 2) != null) ? (tabmode.getValueAt(dt, 2).toString()) : "";
        String c = ((tabmode.getValueAt(dt, 3) != null) ? (tabmode.getValueAt(dt, 3).toString()) : "-") + " - " + ((tabmode.getValueAt(dt, 4) != null) ? (tabmode.getValueAt(dt, 4).toString()) : "");
        String d = ((tabmode.getValueAt(dt, 5) != null) ? (tabmode.getValueAt(dt, 5).toString()) : "-") + " - " + ((tabmode.getValueAt(dt, 6) != null) ? (tabmode.getValueAt(dt, 6).toString()) : "");
        tfID.setText(a);
        tfName.setText(b);
        cbManagerID.setSelectedItem(c);
        cbLocationID.setSelectedItem(d);
        System.out.println(a+b+c+d);
    }//GEN-LAST:event_tblDepartmentMouseClicked

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
//        try {
//            String fileName = "src/views/report/Department.jasper";
//            HashMap HM = new HashMap();
//            File reportFile = new File(fileName);
//            HM.put("key", tfSearch.getText());
//            JasperReport JR = (JasperReport) JRLoader.loadObject(reportFile);
//            JasperPrint JP = JasperFillManager.fillReport(JR, HM,  /* Dimasukkan Apa disini */);
//            JasperViewer.viewReport(JP, false);
//            JasperViewer.setDefaultLookAndFeelDecorated(true);
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(null, e.getMessage());
//        }
    }//GEN-LAST:event_btnPrintActionPerformed

    private void tfIDKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfIDKeyTyped
        char enter = evt.getKeyChar();
        if (!(Character.isDigit(enter))) {
            evt.consume();
        }
    }//GEN-LAST:event_tfIDKeyTyped
    
    private void cbManagerIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbManagerIDActionPerformed

    }//GEN-LAST:event_cbManagerIDActionPerformed

    private void cbLocationIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbLocationIDActionPerformed

    }//GEN-LAST:event_cbLocationIDActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DepartmentView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DepartmentView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DepartmentView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DepartmentView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DepartmentView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<String> cbLocationID;
    private javax.swing.JComboBox<String> cbManagerID;
    private javax.swing.JPanel pnDataDepartment;
    private javax.swing.JPanel pnInputDepartment;
    private javax.swing.JScrollPane spDepartment;
    private javax.swing.JTable tblDepartment;
    private javax.swing.JTextField tfID;
    private javax.swing.JTextField tfName;
    private javax.swing.JTextField tfSearch;
    private javax.swing.JLabel txtID;
    private javax.swing.JLabel txtLocationID;
    private javax.swing.JLabel txtManagerID;
    private javax.swing.JLabel txtName;
    private javax.swing.JLabel txtTitle;
    // End of variables declaration//GEN-END:variables
}
